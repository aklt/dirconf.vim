==============================================================================
*dirconf.txt*             Project configuration and notes                 v0.2.0
==============================================================================
USAGE                                                  *dirconf*  *dirconf-usage* 

This plugin is for managing project specific vim configuration and notes in a
directory separate from the project directory. 

When editing a file of your project call: >
  
    :DirConf
<
to open the context file with vim configuration that will be executed whenever
you edit a file in this project.  Optionally you can specify a file suffix of
the file to open: >

    :DirConf md
<
to keep notes about a project separate from the project source code.
     
The project root directory is determined by searching backwards from the file
path until one of the files in `g:dirconf_parent_files` is found.  It defaults
to: >

    let g:dirconf_parent_files = ['.git/config'] 
<
                                                                *g:dirconf_dir*

All project files are stored under `g:dirconf_dir` which defaults to: >
    
    let g:dirconf_dir = $HOME . '/.vim/dirconf'
<
If the directory does not exist it is created.
                                                            *g:dirconf_verbose*

To see debug info you can set >
     
    let g:dirconf_verbose = 1
<
Description ~

The first time a file is edited in a context dir that has a corresponding
context file it is evaluated and a function is created from its contents
giving it some context: >

    echomsg 'a:dir is ' . a:dir
    echomsg 'a:name is ' . a:name
    echomsg 'a:file is ' . a:file
    let reload_eagerly = 1
<
The above variables are all defined and the user is expected to set
`reload_eagerly` to force evaluation of the declarations each time a buffer
with this context function becomes active.

TODO                                                             *dirconf-todo*

* work on windows
* add implicit global variables to script, ie. script name, etc

==============================================================================
vim:tw=78:ts=8:ft=help:fdm=marker
